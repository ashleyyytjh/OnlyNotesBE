stages:
  - scan

default:
  before_script:
    - cd infra/iac

variables:
  MESSAGE: ""  # Initialize the MESSAGE variable

terrascan:
  image:
    name: tenable/terrascan:latest
    entrypoint: ["/bin/sh", "-c"]
  stage: scan
  script:
    - /go/bin/terrascan scan -i terraform -o json . > terrascan_report.json
    - |
      EXIT_CODE=$?
      if [ $EXIT_CODE -eq 3 ]; then
        MESSAGE="üö® Policy violations found."
        exit 3
      elif [ $EXIT_CODE -eq 4 ]; then
        MESSAGE="‚ö†Ô∏è Execution error."
        exit 4
      elif [ $EXIT_CODE -eq 5 ]; then
        MESSAGE="‚ùó Severe error encountered."
        exit 5
      fi
  allow_failure: false
  artifacts:
    paths:
      - terrascan_report.json
  after_script:
    - |
      if [ "$CI_JOB_STATUS" == "failed" ]; then
        curl -H "Content-Type: application/json" \
          -X POST \
          -d "{\"content\": \"üö® Terrascan job failed in GitLab CI pipeline. $MESSAGE Check the pipeline logs for details: $CI_PROJECT_URL/-/jobs/$CI_JOB_ID\"}" \
          $DISCORD_WEBHOOK_URL
      fi